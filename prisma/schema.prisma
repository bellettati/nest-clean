// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
    STUDENT
    INSTRUCTOR
}

model User {
    @@map("users")
    
    id String @id @default(uuid()) 
    name String
    email String @unique
    password String
    role UserRole @default(STUDENT)

    questions Question[]
    answers Answer[]
}

model Question {
    @@map("questions")

    id String @id @default(uuid())
    title String
    slug String @unique
    content String

    authorId String @map("author_id")
    author User @relation(fields: [authorId], references: [id])

    bestAnswerId String? @map("best_answer_id") @unique
    bestAnswer Answer? @relation("bestAnswer", fields: [bestAnswerId], references: [id])

    answers Answer[]

    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime? @map("updated_at") @updatedAt
}

model Answer {
    @@map("answers")

    id String @id @default(uuid())
    content String
    
    authorId String @map("author_id")
    author User @relation(fields: [authorId], references: [id])

    questionId String @map("question_id")
    question Question @relation(fields: [questionId], references: [id])

    bestAnswerOn Question? @relation("bestAnswer")

    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime? @updatedAt @map("updated_at")
}
